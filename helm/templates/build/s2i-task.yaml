apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: s2i
spec:
  params:
    - description: The location of the s2i builder image.
      name: BUILDER_IMAGE
      type: string
    - default: .
      description: The location of the path to run s2i from.
      name: PATH_CONTEXT
      type: string
    - default: 'true'
      description: >-
        Verify the TLS on the registry endpoint (for push/pull to a non-TLS
        registry)
      name: TLSVERIFY
      type: string
    - default: '0'
      description: Log level when running the S2I binary
      name: LOGLEVEL
      type: string
  resources:
    inputs:
      - name: source
        type: git
    outputs:
      - name: image
        type: image
  steps:
    - command:
        - mvn
        - package
        - -Pnative
        - -e
        - -B
        - -DskipTests
        - -Dmaven.javadoc.skip=true
        - -Dmaven.site.skip=true
        - -Dmaven.source.skip=true
        - -Djacoco.skip=true
        - -Dcheckstyle.skip=true
        - -Dfindbugs.skip=true
        - -Dpmd.skip=true
        - -Dfabric8.skip=true
        - -Djar.finalName=service
      image: '$(params.BUILDER_IMAGE)'
      name: build
      resources: {}
      volumeMounts:
        - mountPath: /workspace/source/target
          name: target-bin
      workingDir: /workspace/source
    - script: |
        #!/usr/bin/env bash

        mkdir /workspace/source/target/s2i-bin
        cp /workspace/source/target/*-runner /workspace/source/target/s2i-bin/

        /usr/local/bin/s2i \
        '--loglevel=$(params.LOGLEVEL)' \
        build \
        /workspace/source/target/s2i-bin \
        'registry.access.redhat.com/ubi8/s2i-core' \
        '--as-dockerfile' \
        /gen-source/Dockerfile.gen
      image: 'quay.io/openshift-pipeline/s2i:nightly'
      name: generate
      resources: {}
      volumeMounts:
        - mountPath: /gen-source
          name: gen-source
        - mountPath: /workspace/source/target
          name: target-bin
      workingDir: /workspace/source
    - command:
        - buildah
        - bud
        - '--storage-driver=vfs'
        - '--tls-verify=$(params.TLSVERIFY)'
        - '--layers'
        - '-f'
        - /gen-source/Dockerfile.gen
        - '-t'
        - $(resources.outputs.image.url)
        - .
      image: quay.io/buildah/stable
      name: build-image
      resources: {}
      securityContext:
        privileged: true
      volumeMounts:
        - mountPath: /var/lib/containers
          name: varlibcontainers
        - mountPath: /gen-source
          name: gen-source
      workingDir: /gen-source
    - command:
        - buildah
        - push
        - '--tls-verify=$(params.TLSVERIFY)'
        - $(resources.outputs.image.url)
        - 'docker://$(resources.outputs.image.url)'
      image: quay.io/buildah/stable
      name: push
      resources: {}
      securityContext:
        privileged: true
      volumeMounts:
        - mountPath: /var/lib/containers
          name: varlibcontainers
  volumes:
    - emptyDir: {}
      name: varlibcontainers
    - emptyDir: {}
      name: gen-source
    - emptyDir: {}
      name: target-bin